@using VocaDb.Model.DataContracts.Users
@using VocaDb.Model.Helpers
@using VocaDb.Model.Utils
@using VocaDb.Web.Helpers
@using VocaDb.Web.Models.Shared
@using VocaDb.Web.Resources.Domain
@inherits VocaDb.Web.Code.VocaDbPage

@{
	var searchObjectType = PageProperties.GlobalSearchType;
}

<!-- Common scripts -->
<remikus path="/bundles/manifest.js" />
<remikus path="/bundles/vendor.js" />
<remikus path="/bundles/shared/libs.js" />
<remikus path="/bundles/vdb.js" />

<script type="text/javascript">
	vdb = {};
	vdb.values = @ToJS(new GlobalValues(BrandableStrings, Config, UserContext));
	vdb.resources = vdb.resources || {};

	var model = {
		entryTypeTranslations: @ResourceHelpers.ToJSON(EntryTypeNames.ResourceManager),
		getNewReportCount: @ToJS(Login.CanManageEntryReports),
		hasUnreadMessages: @ToJS(Login.Manager.IsLoggedIn && Login.User.UnreadMessagesCount > 0),
		reportSent: @ToJS(AjaxRes.SharedStrings.ReportSent),
		rootPath: '@RootPath',
		thanksForRating: @ToJS(AjaxRes.SharedStrings.ThanksForRating),
		topBarData: @Html.Raw(JsonHelper.Serialize(new {
			searchObjectType = searchObjectType.ToString()
		})),
		unreadMessagesCount: @(Login.Manager.IsLoggedIn ? Login.User.UnreadMessagesCount : 0),
	};
	app.SharedLayoutScripts(model);
</script>
