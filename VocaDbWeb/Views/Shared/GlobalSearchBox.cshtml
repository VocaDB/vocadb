@using VocaDb.Model
@using VocaDb.Model.Domain.Globalization
@using VocaDb.Model.Domain.Images
@using VocaDb.Web.Helpers
@using VocaDb.Web.Models.Shared.Partials.User
@using Res = ViewRes.TopBarStrings
@model VocaDb.Web.Models.GlobalSearchBoxModel

@using (Html.BeginForm("GlobalSearch", "Home", FormMethod.Post, new { @class = "navbar-form form-inline pull-left navbar-search d-lg-flex", id = "globalSearchBox" }))
{
	<input type="hidden" id="globalSearchObjectType" name="objectType" data-bind="value: entryType" />

	<a class="navbar-brand" asp-action="Index" asp-controller="Home">@(BrandableStrings.SiteName)</a>

	<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navigation" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
		<span class="navbar-toggler-icon"></span>
	</button>

	<div class="collapse navbar-collapse navigation">
		<ul class="navbar-nav me-auto mb-2 mb-lg-0 pb-0">
			<li class="nav-item">
				<div class="input-group">
					<button class="btn btn-sm btn-info dropdown-toggle" type="button" id="searchObjectType" data-bs-toggle="dropdown" aria-expanded="false">
						<span data-bind="text: entryTypeName">@Model.AllObjectTypes.GetName(Model.ObjectType)</span>
						<span class="caret"></span>
					</button>
					<ul class="dropdown-menu" aria-labelledby="searchObjectType">
						@foreach (var entryType in Model.AllObjectTypes)
						{
							<li>
								<a class="dropdown-item" data-bind="click: function() { entryType('@entryType.Id'); }" href="#">@entryType.Name</a>
							</li>
						}
					</ul>
					<input type="text" name="globalSearchTerm" id="globalSearchTerm" class="globalSearchBox search-query form-control form-control-sm" size="50" placeholder="@ViewRes.SharedStrings.Search" maxlength="255" />
					<button type="submit" class="btn btn-sm btn-info" title="@ViewRes.SharedStrings.Search">
						<i class="bi bi-search"></i>
					</button>
				</div>
			</li>
			<li class="nav-item mx-lg-3">
				<div class="dropdown">
					<a class="btn btn-sm btn-info dropdown-toggle" id="account" role="button" data-bs-toggle="dropdown" aria-expanded="false" href="#">
						<i class="bi bi-person-fill"></i>
						<span class="d-none d-sm-inline-block">
							@ViewRes._LayoutStrings.Account
						</span>
						<span data-bind="visible: hasNotifications" class="badge badge-small bg-danger" style="display: none;">!</span>
						<span class="caret"></span>
					</a>

					<ul class="dropdown-menu" role="menu" aria-labelledby="account">
						@if (!Login.Manager.IsLoggedIn)
						{
							<li><a class="dropdown-item" href="@Url.Action("Login", "User")" onclick=" vdb.functions.showLoginPopup(); return false; ">@ViewRes._LayoutStrings.LogIn</a></li>
							<li><a class="dropdown-item" asp-action="Create" asp-controller="User">@(ViewRes._LayoutStrings.Register)</a></li>
						}
						else
						{
							<li><a class="dropdown-item" asp-action="Profile" asp-controller="User" asp-route-id="@(Login.Manager.Name)">@(ViewRes.User.MySettingsStrings.Profile)</a></li>
							<li>
								<a class="dropdown-item" href="@Url.Action("Profile", "User", new { id = Login.Manager.Name })#Albums">@Res.MyAlbums</a>
							</li>
							<li>
								<a class="dropdown-item" href="@Url.Action("Profile", "User", new { id = Login.Manager.Name })#Songs">@Res.MySongs</a>
							</li>
							<li><a class="dropdown-item" asp-action="MySettings" asp-controller="User">@(ViewRes.User.DetailsStrings.MySettings)</a></li>
							if (Login.CanManageEntryReports)
							{
								<li>
									<a class="dropdown-item" href="@Url.Action("ViewEntryReports", "Admin")">
										@Res.EntryReports
										<span data-bind="visible: reportCount() > 0, text: reportCount" class="badge badge-small bg-danger" style="display: none"></span>
									</a>
								</li>
							}
							<li><a class="dropdown-item" asp-action="Logout" asp-controller="User">@(ViewRes._LayoutStrings.LogOut)</a></li>
						}
						<li><hr class="dropdown-divider" /></li>
						<li><a class="dropdown-item"><small>@ViewRes.User.MySettingsStrings.DefaultLanguageSelection</small></a></li>
						@foreach (var lp in EnumVal<ContentLanguagePreference>.Values)
						{
							<li>
								<a class="dropdown-item" href="#" onclick="return app.setLanguagePreferenceCookie('@lp');">
									<i class="menuIcon icon-ok" style="@(lp == Login.Manager.LanguagePreference ? "" : "display: none;")"></i>
									<i class="menuIcon icon-" style="@(lp == Login.Manager.LanguagePreference ? "display: none;" : "")"></i>
									@Translate.ContentLanguagePreferenceName(lp)
								</a>
							</li>
						}

					</ul>
				</div>
			</li>
			@if (Login.Manager.IsLoggedIn)
			{
				<li class="nav-item">
					<div class="dropdown">
						<a class="btn btn-sm btn-info dropdown-toggle" data-bind="click: ensureMessagesLoaded" data-bs-toggle="dropdown" href="#">
							<i class="bi bi-envelope-fill"></i>
							<span data-bind="visible: unreadMessagesCount, text: unreadMessagesCount" class="badge badge-small bg-danger" style="display: none;"></span>
							<span class="caret"></span>
						</a>

						<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
							<li class="dropdown-item" data-bind="visible: unreadMessagesCount() > 0 && !isLoaded()">
								<p>
									@ViewRes.SharedStrings.Loading
								</p>
							</li>
							<!-- ko foreach: unreadMessages -->
							<li class="dropdown-item">
								<a href="#" data-bind="attr: { href: '@Url.Action("Messages", "User")' + '?messageId=' + id }">
									<div class="media">
										<div class="pull-left media-image-usermessage" style="width: 40px; height: 40px;">
											<!-- ko if: $data.sender -->
											<partial name="Partials/User/_ProfileIconKnockout_ImageSize" model="@(new ProfileIconKnockout_ImageSizeViewModel(ImageSize.SmallThumb, "sender", 40))" />
											<!-- /ko -->
											<!-- ko ifnot: $data.sender -->
											<img src="@Url.Content("~/Content/vocadb_40.png")" alt="Notification" />
											<!-- /ko -->
										</div>
										<div class="media-body media-body-usermessage">
											<span data-bind="text: $data.sender ? sender.name + ' -' : ''"></span>
											<small data-bind="text: createdFormatted"></small><br />
											<span data-bind="text: subject"></span>
										</div>
									</div>
								</a>
							</li>
							<!-- /ko -->
							<li class="dropdown-item" data-bind="visible: isLoaded() && unreadMessages().length == 0">
								<p>
									@ViewRes.TopBarStrings.NoUnreadMessages
								</p>
							</li>
							<li class="divider"></li>
							<li class="dropdown-item">
								<a href="@Url.Action("Messages", "User")">@ViewRes.TopBarStrings.ViewAllMessages</a>
							</li>
						</ul>
					</div>
				</li>
			}
		</ul>
	</div>

}
